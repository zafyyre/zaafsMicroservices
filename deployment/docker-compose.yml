version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
    - "2181"
    hostname: zookeeper
    container_name: "zookeeper"

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - 9092:9092
    hostname: kafka
    container_name: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
    - "zookeeper"

  db:
    hostname: db
    image: mysql:5.7
    container_name: db
    environment:
      MYSQL_DATABASE: events
      MYSQL_USER: user
      MYSQL_PASSWORD: natasha25
      MYSQL_ROOT_PASSWORD: natasha25
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql

  receiver:
    build:
     context: ../receiver
     dockerfile: Dockerfile
    container_name: "receiver"
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - kafka

  storage:
    build:
     context: ../storage
     dockerfile: Dockerfile
    container_name: "storage"
    restart: always
    ports:
      - 8090:8090
    depends_on:
      - kafka
      - db

  processing:
    build:
     context: ../processing
     dockerfile: Dockerfile
    container_name: "processing"
    restart: always
    ports:
      - 8100:8100
    depends_on:
      - storage
    network_mode: host

  audit:
    build:
     context: ../audit
     dockerfile: Dockerfile
    container_name: "audit"
    restart: always
    ports:
      - 8110:8110
    depends_on:
      - kafka

  dashboard:
    image: dashboard
    ports:
      - 3000:3000
    depends_on:
      - processing
      - audit

volumes:
  my-db:
